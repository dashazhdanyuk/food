{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;;AAEA,0DAA0D;AAC1D,8DAA8D;;AAE9D;AACA,oDAAoD;AACpD;AACA,kEAAkE;AAClE;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qDAAqD;AACrD;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACnHA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE,gCAAgC;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,+BAA+B,UAAU,MAAM,SAAS;AACxD,sDAAsD,WAAW;AACjE,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA,8DAA8D,WAAW;AACzE;AACA,eAAe;;AAEf,yCAAyC;AACzC;AACA;;AAEA;AACA;;AAEA;AACA,+CAA+C,IAAI,YAAY,WAAW;AAC1E;;;AAGA;AACA;;AAEA;AACA;AACA,2BAA2B,iCAAiC;AAC5D;AACA,YAAY;AACZ,SAAS;AACT;;AAEA;;;;;;;;;;AChEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;;AAET,iCAAiC;AACjC;AACA;;AAEA,kCAAkC;AAClC;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD;;AAEjD,iFAAiF;AACjF;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,8BAA8B;AAC9B,aAAa;AACb,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA;;AAEA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACzFA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL,2BAA2B;AAC3B,0CAA0C;AAC1C;AACA;AACA,iDAAiD;AACjD,qCAAqC;AACrC;;AAEA,4BAA4B;AAC5B,yCAAyC;AACzC;AACA;AACA,2CAA2C;AAC3C;;AAEA;AACA,8EAA8E;AAC9E;AACA;AACA,KAAK;;AAEL,kDAAkD;AAClD,uEAAuE;AACvE;AACA;AACA,KAAK;;AAEL,uDAAuD;;AAEvD,mCAAmC;AACnC,uHAAuH;AACvH;AACA,oEAAoE;AACpE;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACjDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,wBAAwB;AACxB,oBAAoB;;AAEpB;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,KAAK;AACL;AACA;AACA;;AAEA,yDAAyD;AACzD,wCAAwC;AACxC;;AAEA,6CAA6C;;AAE7C;AACA;AACA,KAAK,GAAG;;AAER,wCAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B;;AAE/B,oBAAoB,mBAAmB;AACvC;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oEAAoE;AACpE,wBAAwB;AACxB,UAAU;AACV;AACA;;AAEA,qDAAqD,OAAO;;AAE5D;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA,qDAAqD,OAAO;;AAE5D;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA,mCAAmC;AACnC;;AAEA,yDAAyD,OAAO;;AAEhE;AACA,0CAA0C,WAAW;AACrD,cAAc;AACd;AACA;;AAEA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;;;;;;;;;;AC5JA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;AACxC;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA;;;;;;;;;;AC5CA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;AAC7B;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;;AAEvB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;UCjEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA;AACA,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,mBAAmB,mBAAO,CAAC,gDAAkB;AAC7C,kBAAkB,mBAAO,CAAC,8CAAiB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,E","sources":["webpack://food_dist/./js/modules/calc.js","webpack://food_dist/./js/modules/cards.js","webpack://food_dist/./js/modules/forms.js","webpack://food_dist/./js/modules/modal.js","webpack://food_dist/./js/modules/slider.js","webpack://food_dist/./js/modules/tabs.js","webpack://food_dist/./js/modules/timer.js","webpack://food_dist/webpack/bootstrap","webpack://food_dist/./js/script.js"],"sourcesContent":["function calc() {\n    //Calc\n\n    const result = document.querySelector('.calculating__result span');\n    let sex, height, weight, age, ratio;\n\n    if(localStorage.getItem('sex')) {\n        sex = localStorage.getItem('sex');\n    } else{\n        sex = 'female';\n        localStorage.setItem('sex', 'female');\n    }\n\n    if(localStorage.getItem('ratio')) {\n        ratio = localStorage.getItem('ratio');\n    } else{\n        ratio = 1.375;\n        localStorage.setItem('ratio', 1.375);\n    }\n\n    function initlocalSettings(selector, activeClass) {\n        const elements = document.querySelectorAll(selector);\n\n        elements.forEach( elem => {\n            elem.classList.remove(activeClass);\n\n            if(elem.getAttribute('id') === localStorage.getItem('sex')){\n                elem.classList.add(activeClass);\n            } \n            if(elem.getAttribute('data-ratio') === localStorage.getItem('ratio')){\n                elem.classList.add(activeClass);\n            }\n        });\n    }\n\n    initlocalSettings('#gender div', 'calculating__choose-item_active');\n    initlocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\n\n    function calcTotal() {\n        if(!sex || !height || !weight || ! age || ! ratio) {\n            result.textContent = '____';\n            return;\n        }\n\n        if (sex === 'female') {\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\n        } else {\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\n        }\n    }\n\n    calcTotal();\n\n    function getStaticInformation(selector, activeClass){ //функция для дивов активности и выбора male/female\n        const elements = document.querySelectorAll(selector); //получаем все дивы с этим классом\n\n        elements.forEach(elem => {\n            elem.addEventListener('click', (e) => { //делегирование событий \n                if(e.target.getAttribute('data-ratio')){\n                    ratio = +e.target.getAttribute('data-ratio'); //если дивы имеют дата-атрибут с активностью, то собираем с них коеф активности, который указан в дата-аторибуте каждого дива с активностью\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\n                } else {\n                    sex = e.target.getAttribute('id');\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\n                }\n    \n                console.log(ratio, sex);\n    \n                //назначаем класс активности (сначала убираем активность у всех)\n                elements.forEach(elem => {\n                    elem.classList.remove(activeClass);\n                });\n    \n                e.target.classList.add(activeClass); //назначаем класс активности диву, в который кликнули\n    \n                calcTotal();\n            });\n        });\n    }\n\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\n\n    function getDynamicInformation(selector) {\n        const input = document.querySelector(selector);\n\n        input.addEventListener('input', () => {\n\n            if (input.value.match(/\\D/g)){\n                input.style.border = '1px solid red';\n            }else{\n                input.style.border = 'none';\n            }\n\n            switch (input.getAttribute('id')){\n                case 'height':\n                    height = +input.value;\n                    break;\n                case 'weight':\n                    weight = +input.value;\n                    break;\n                case 'age':\n                    age = +input.value;\n                    break;\n            }\n\n            calcTotal();\n        });\n    }\n\n    getDynamicInformation('#height');\n    getDynamicInformation('#weight');\n    getDynamicInformation('#age');\n}\n\nmodule.exports = calc;","function cards(){\n    //используем классы для карточек\n\n    class MenuCard {\n        constructor (src, alt, title, descr, price, parentSeletor, ...classes) {\n            this.src = src;\n            this.alt = alt;\n            this.title = title;\n            this.descr = descr;\n            this.price = price;\n            this.classes = classes;\n            this.parent = document.querySelector(parentSeletor); //пушим наш новый элемент в родителя parentSelector\n            this.transfer = 27; //курс валют, чтобы перевести гривны в доллары\n            this.changeToUAH();\n        }\n\n        changeToUAH() {\n            this.price = this.price * this.transfer;\n        }\n\n        render () {\n            const element = document.createElement('div');\n            \n            if(this.classes.length === 0) {\n                this.element = 'menu__item';\n                element.classList.add(this.element);\n            } else {\n                this.classes.forEach(className => element.classList.add(className));\n            }\n\n            element.innerHTML = `\n                    <img src=${this.src} alt=${this.alt}>\n                    <h3 class=\"menu__item-subtitle\">${this.title}</h3>\n                    <div class=\"menu__item-descr\">${this.descr}</div>\n                    <div class=\"menu__item-divider\"></div>\n                    <div class=\"menu__item-price\">\n                        <div class=\"menu__item-cost\">Цена:</div>\n                        <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\n                    </div>\n            `; //создали верстку карты\n\n            this.parent.append(element); //вставляет узлы в конец parent\n        }\n    }\n\n    const getResource = async (url) => {\n        const res = await fetch(url);\n\n        if(!res.ok){\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n        }\n\n\n        return await res.json(); \n    };\n\n    getResource('http://localhost:3000/menu')\n        .then(data => {\n            data.forEach(({img, altimg, title, descr, price}) => {\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\n           });\n        });\n}\n\nmodule.exports = cards;","function forms() {\n    //forms \n\n    const forms = document.querySelectorAll('form');\n\n    const message = {\n        loading : 'img/form/spinner.svg',\n        success: 'Спасибо! Скоро мы с вами свяжемся',\n        failure: 'Что-то пошло не так...'\n    };\n\n    forms.forEach(item => {\n        bindPostData(item);\n    });\n\n    const postData = async (url, data) => {\n        const res = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                'Content-type': 'application/json' //заголовок запроса\n            }, \n            body: data\n        });\n\n        return await res.json(); //возвращаем промис. сначала дожидаемся результата промиса,  а потом возвращаем его (return)\n        // так как это асинхронный код, сначала будет выполняться fetch, а потом результат присваиваться переменной res. если обещание еще не выполнилось, то в перменную присвоится undefined и будет ошибка. нам нужно сделать асинхронный код синхронным (async) - мы указали, что код в функции будет асинхронным, await мы ставим перед операциями, которые надо дождаться\n    };\n\n    function bindPostData(form) { //привязка постинга\n        form.addEventListener ('submit', (e) => {\n            e.preventDefault(); //эта окманда используется первой в аджакс запросах\n\n            const statusMessage = document.createElement('img');\n            statusMessage.src = message.loading;\n            //инлайн стили\n            statusMessage.style.cssText = `\n                display: block;\n                margin: 0 auto;\n            `;\n            form.insertAdjacentElement('afterend', statusMessage);\n\n            const formData = new FormData(form); //взяли данные из HTML-формы и отправить их с помощью fetch или другого метода для работы с сетью.\n\n            const json = JSON.stringify(Object.fromEntries(formData.entries())); //FormData специфический объект поэтому надо сделать его обычным с помощью перебора значений \n            //сначала formData превращаем в массив массивов (formData.entries()), потом превращаем ее в классический объект (Object.fromEntries()), после этого классический объект превращаем в json (JSON.stringify())\n\n            postData('http://localhost:3000/requests', json)\n            .then (data => {\n                console.log(data);\n                showThanksModal(message.success);\n                statusMessage.remove();\n            }).catch (() => {\n                showThanksModal(message.failure);\n            }).finally(() => {\n                form.reset(); //очистили форму\n            });\n        });\n    }\n\n    function showThanksModal(message) {\n        const prevModalDialog = document.querySelector('.modal__dialog');\n\n        prevModalDialog.classList.add('hide');\n        openModal();\n\n        const thanksModal = document.createElement('div');\n        thanksModal.classList.add('modal__dialog');\n        thanksModal.innerHTML = `\n            <div class = \"modal__content\">\n                <div class = \"modal__close\" data-close>×</div>\n                <div class = \"modal__title\">${message}</div>\n            </div>\n        `;\n\n        document.querySelector('.modal').append(thanksModal); //отображаем на странице модальное окно благодарности\n        //через 4 секунды удаляем модальное окно благодарности, чтобы пользователь мог повторно отправить форму\n        setTimeout(() => {\n            thanksModal.remove();\n            prevModalDialog.classList.add('show');\n            prevModalDialog.classList.remove('hide');\n            closeModal();\n        }, 4000);\n    }\n\n    fetch('http://localhost:3000/menu')\n        .then(data => data.json())\n        .then(res => console.log(res));\n}\n\nmodule.exports = forms;","function modal() {\n    //Modal\n\n    const btn = document.querySelectorAll('[data-modal]'),\n          modal = document.querySelector('.modal');\n\n    btn.forEach( btn => {\n        btn.addEventListener('click', openModal);\n    })\n\n    function openModal() { //вынесли в функцию код, который повторяется в коде больше одного раза don`t repeat yourself (dry)\n        /* modal.style.display = 'block'; */\n        modal.classList.add('show');\n        modal.classList.remove('hide');\n        document.body.style.overflow = 'hidden'; //стиль который запрещает прокрутку страницы, когда модальное окно открыто\n        clearInterval(modalTimerId); //если пользователь сам откроет окно, то окно не откроется само через некоторое время \n    }\n\n    function closeModal() { //вынесли в функцию код, который повторяется в коде больше одного раза don`t repeat yourself (dry)\n       /*  modal.style.display = 'none'; */\n       modal.classList.add('hide');\n       modal.classList.remove('show');\n        document.body.style.overflow = ''; //браузер сам подставит дефoлтное значение\n    }\n\n    modal.addEventListener('click', (e) => {\n        if(e.target === modal || e.target.getAttribute('data-close') == '') { //если пользлватель кликает на подложку (за пределы модального окна, то окно закрывается), то есть если клик пользователя равно подложке modal, то окно скроется\n            closeModal();\n        }\n    });\n\n    document.addEventListener('keydown', (e) => { //закрытие модального окна при нажатии на esc\n        if (e.code === 'Escape' && modal.classList.contains('show')) { //если пользователь нажал на esc и модальное окно открыто\n            closeModal();\n        }\n    });\n\n    const modalTimerId = setTimeout(openModal, 50000); //открывается модальное окно через 5 секунд перебывания пользователя на сайте \n\n    function showModalByScroll() { //функционал, который открывает модальное окно в случае прокрутки сайта до конца страницы \n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 1) { //если прокрученная часть + видимая часть на экране юзера = высоте всей прокрутки (смотреть таблицу в тетради) \n            openModal();\n            window.removeEventListener('scroll', showModalByScroll);//модальное окно должно включаться только один разб когда пользовательно прокручивает страицу до конца (а не каждый раз, когда прокручивает до конца сайта)\n        }\n    } \n\n    window.addEventListener('scroll', showModalByScroll);\n}\n\nmodule.exports = modal;","function slider() {\n    //slider\n\n    const slides = document.querySelectorAll('.offer__slide'),\n        slider = document.querySelector('.offer__slider'),\n        prev = document.querySelector('.offer__slider-prev'),\n        next = document.querySelector('.offer__slider-next'),\n        total = document.querySelector('#total'),\n        current = document.querySelector('#current'),\n        slidesWrapper = document.querySelector('.offer__slider-wrapper'),\n        slidesField = document.querySelector('.offer__slider-inner'),\n        width = window.getComputedStyle(slidesWrapper).width; //взяли ширину обертки из стилей окна\n    let slideIndex = 1; // Индекс текущего слайда\n    let offset = 0; //для того чтобы понимать на сколько мы отступили вправо/влево\n\n    if(slides.length < 10){\n        total.textContent = `0${slides.length}`;\n        current.textContent = `0${slideIndex}`;\n    }else{\n        total.textContent = slides.length;\n        current.textContent = slideIndex;\n    }\n\n    slidesField.style.width = 100 * slides.length + '%'; //все слайды, которые есть на странице поместили в slidesField\n    slidesField.style.display = 'flex'; //поставили все слайды в строку\n    slidesField.style.transition = '0.5s all'; \n\n    slidesWrapper.style.overflow = 'hidden'; // скрыли слайды, которые не должны попадать в область видимости\n\n    slides.forEach( slide => {\n        slide.style.width = width;\n    }); //все слайды будут одной фиксированной ширины\n\n    slider.style.position = 'relative'; //точки будут прикреплены к слайдеру\n\n    const indicators = document.createElement('ol'), //wrapper for dots\n          dots = [];\n          \n    indicators.classList.add('carousel-indicators'); \n    indicators.style.cssText = `\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 15;\n        display: flex;\n        justify-content: center;\n        margin-right: 15%;\n        margin-left: 15%;\n        list-style: none;\n    `;\n\n    slider.append(indicators); //past this block of wrapper\n\n    for (let i = 0; i < slides.length; i++){\n        const dot = document.createElement('li');\n        dot.setAttribute('data-slide-to', i+1); //i+1 для нумерации слайдов, начиная с первого\n        dot.style.cssText = `\n            box-sizing: content-box;\n            flex: 0 1 auto;\n            width: 30px;\n            height: 6px;\n            margin-right: 3px;\n            margin-left: 3px;\n            cursor: pointer;\n            background-color: #fff;\n            background-clip: padding-box;\n            border-top: 10px solid transparent;\n            border-bottom: 10px solid transparent;\n            opacity: .5;\n            transition: opacity .6s ease;\n        `;\n\n        if(i == 0) {\n            dot.style.opacity = 1;\n        } //for first slide opacity = 1, but other dots will be 0.5\n\n        indicators.append(dot);\n        dots.push(dot);\n    }\n\n    function deleteNotDigits(str) {\n        return +str.replace(/\\D/g, '');\n    }\n\n    next.addEventListener('click', () => {\n        if(offset == deleteNotDigits(width) * (slides.length - 1)){ //'500px' - пример переменной width, поэтому нужно обработать ее, чтобы это значение было число без px\n            offset = 0; //если слайдер долистать до конца, то он возвращается на первый слайд\n        } else {\n            offset += deleteNotDigits(width);\n        }\n\n        slidesField.style.transform = `translateX(-${offset}px)`;\n\n        if(slideIndex == slides.length) {\n            slideIndex = 1;\n        } else {\n            slideIndex++;\n        }\n\n        if (slides.length < 10) {\n            current.textContent = `0${slideIndex}`;\n        } else {\n            current.textContent = slideIndex;\n        }\n\n        dots.forEach(dot => dot.style.opacity = '.5');\n        dots[slideIndex -1].style.opacity = 1;\n    });\n\n    prev.addEventListener('click', () => {\n        if(offset == 0){ \n            offset = deleteNotDigits(width) * (slides.length -1);\n        } else {\n            offset -= deleteNotDigits(width);\n        }\n\n        slidesField.style.transform = `translateX(-${offset}px)`;\n\n        if(slideIndex == 1) {\n            slideIndex = slides.length;\n        } else {\n            slideIndex--;\n        }\n\n        if (slides.length < 10) {\n            current.textContent = `0${slideIndex}`;\n        } else {\n            current.textContent = slideIndex;\n        }\n\n        dots.forEach(dot => dot.style.opacity = '.5');\n        dots[slideIndex -1].style.opacity = 1;\n    });\n\n    dots.forEach(dot => {\n        dot.addEventListener('click', (e) => {\n            const slideTo = e.target.getAttribute('data-slide-to');\n\n            slideIndex =  slideTo; //устанавливаем в позицию слайдТу (кликнули на 4 точку, значит 4 слайд отобразился)\n            offset =  deleteNotDigits(width) * (slideTo -1);\n\n            slidesField.style.transform = `translateX(-${offset}px)`;\n\n            if (slides.length < 10) {\n                current.textContent = `0${slideIndex}`;\n            } else {\n                current.textContent = slideIndex;\n            }\n\n            dots.forEach(dot => dot.style.opacity = '.5');\n            dots[slideIndex -1].style.opacity = 1;\n        });\n    });\n}\n\nmodule.exports = slider;","function tabs() {\n    //tabs\n\n    const tabs = document.querySelectorAll('.tabheader__item'),\n          tabsContent = document.querySelectorAll('.tabcontent'),\n          tabsParent  = document.querySelector('.tabheader__items');\n\n    function hideTabContent() {\n        tabsContent.forEach(item => {\n            item.classList.add('hide'); /* здесь мы скрыли абсолютно все табы */\n            item.classList.remove('show', 'fade');\n        });\n\n        tabs.forEach(item => {\n            item.classList.remove('tabheader__item_active')\n        })\n    }\n\n    /* если в функцию не передается аргумент, то по умолчанию будет стоять 0 (первый элемент) */\n    function showtabContent(i = 0) {\n        tabsContent[i].classList.add('show', 'fade');\n        tabsContent[i].classList.remove('hide');\n        tabs[i].classList.add('tabheader__item_active')\n    }\n\n    hideTabContent();\n    showtabContent();\n\n    tabsParent.addEventListener('click', (event) => {\n        const target = event.target;\n\n        /* проверяем или сущетсвует таргет и нажимаем ли мы точно на текст, а не на пустое пространство */\n        /* если таргет равно айтем (если таб, по которому кликнули совпадает с элементом, который сейчас перебирается), то будут выполняться функции */\n        if (target && target.classList.contains('tabheader__item')) {\n            tabs.forEach ((item, i) => {\n                if (target == item) {\n                    hideTabContent();\n                    showtabContent(i);\n                }\n            });\n        }\n    });\n}\n\nmodule.exports = tabs;","function timer() {\n    //timer\n\n    const deadline = '2023-09-01';\n    \n    function getTimeRemainig(endtime) {\n        let days, hours, minutes, seconds;\n        const t = Date.parse(endtime) - Date.parse(new Date()) //получаем кол-во миллисекунд\n\n        if(t <= 0) {\n            days = 0;\n            hours = 0;\n            minutes = 0;\n            seconds = 0;\n        } else {\n              days = Math.floor(t / (1000*60*60*24)), //Math.floor - округлит значение\n              hours = Math.floor((t / (1000*60*60) % 24)),\n              minutes = Math.floor((t / 1000/ 60) % 60),\n              seconds = Math.floor((t / 1000 ) % 60);\n        }\n\n        return {\n            'total': t,\n            'days': days,\n            'hours': hours,\n            'minutes': minutes,\n            'seconds': seconds\n        };\n    }\n\n    function getZero(num) {  //добавляет ноль в числа состоящие из одной цифры 2023-01-01\n        if(num >= 0 && num < 10) {\n            return `0${num}`;\n        } else {\n            return num;\n        }\n    }\n\n    function setClock(selector, endTime) {\n        const timer = document.querySelector(selector),\n              days = timer.querySelector('#days'),\n              hours = timer.querySelector('#hours'),\n              minutes = timer.querySelector('#minutes'),\n              seconds = timer.querySelector('#seconds'),\n              timeInterval = setInterval(updateClock, 1000);\n\n        updateClock(); //исправили \"моргающую\" верстку на таймере при обновлении страницы\"\n\n        function updateClock() {\n            const t = getTimeRemainig(endTime);\n\n            days.innerHTML = getZero(t.days);\n            hours.innerHTML = getZero(t.hours);\n            minutes.innerHTML = getZero(t.minutes);\n            seconds.innerHTML = getZero(t.seconds);\n\n            if(t.total <= 0) {\n                clearInterval(timeInterval);\n            }\n        }\n    }\n\n    setClock('.timer', deadline);\n}\n\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","window.addEventListener('DOMContentLoaded', () => {\n    // используем синтаксис commonJS\n    const tabs = require('./modules/tabs'),\n          modal = require('./modules/modal'),\n          timer = require('./modules/timer'),\n          cards = require('./modules/cards'),\n          calc = require('./modules/calc'),\n          slider = require('./modules/slider'),\n          forms = require('./modules/forms');\n\n    tabs();\n    modal();\n    timer();\n    cards();\n    calc();\n    slider();\n    forms();\n\n});"],"names":[],"sourceRoot":""}